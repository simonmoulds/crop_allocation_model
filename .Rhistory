names(rice_suit)
names(yams_suit)
q()
n
source("code/prepare_input_data.R")
rice_suit
rice_suit_d
rice_suit
length(rice_suit)
names(rice_suit_w)
names(rice_suit_d)
rice_suit[c(1,1,3,3,4,4)]
length(rice_suit[c(1,1,3,3,4,4)])
names(barl_suit)
q()
n
source("code/prepare_input_data.R")
dim(rabi_area_df)
242394/6
head(area_df)
names(rice_suit)
names(suit_df)
summary(suit_df$rice)
summary(suit_df$rice)
summary(suit_df$rice)
summary(suit_df$rice)
q()
n
source("code/prepare_input_data.R")
rice_harv
rice_sf
wheat_sf
corn_sf
ocer_sf
oil_sf
fibre_sf
palm_sf
sugar_sf
root_sf
misc_sf
q()
n
source("code/prepare_input_data.R")
q()
n
n_cell
names(area_df)[1:5]
unique(area_df$input)
head(area_df)
head(init_area_mat)
init_total_area_mat
colnames(init_total_area_mat)
init_total_area_mat[,27[
init_total_area_mat[,27]
sum(area_mat[,27] * yield_mat[,27])
i=
2
dmd0
dmd0[27]
sum(area_mat[,27] * yield_mat[,27])
max(area_mat[,27])
max(yield_mat[,27])
kharif_yield_df
q()
n
source("prepare_input_data.R")
source("code/prepare_input_data.R")
q()
n
source("code/allocate.R")
sum(area_mat[,27] * yield_mat[,27])
sum(area_mat[,27] * yield_mat[,27])
dmd0[27]
dmd1[27]
sum(init_area_mat[,27] * init_yield_mat[,27])
length(cell_area)
summary(cell_area)
i
i=2
j=1
crop_ix
j=2
crop
which(crop_ix)
which(crop_ix)
any(is.na(area_mat))
sum(init_area_mat[,41] * init_yield_mat[,41])
i
dmd0[41]
  C-c C-c
summary(suit_mat)
max(suit_mat)
max(suit_mat[,41])
i
j=2
which(crop_ix)
fact
n_season
n_input
dmd1[41]
dmd1[27]
max(yield_mat)
head(area_df)
dim(init_suit_mat)
dim(init_yield_mat)
dim(init_area_mat)
head(area_df)
head(init_area_mat)
q()
n
dim(area_df)
dim(area_df1)
all.equal(area_df, area_df1)
source("code/prepare_input_data.R")
dim(nb_df)
source("code/allocate.R")
sourceCpp("code/allocate.cpp")
q()
n
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
dim(area_df)
unique(area_df$input)
source("code/allocate.R")
dim(area_df)
dim(area_df)
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
q()
n
source("code/allocate.R")
source("code/prepare_input_data.R")
source("code/allocate.R")
source("code/allocate.R")
q()
n
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
mat = matrix(data=1:10, nrow=2)
mat1 = matrix(data=2:11, nrow=2)
mat
mat1
pmax(mat,mat1)
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
q()
n
install.packages("rgdal")
install.packages("rgdal", type="source")
install.packages("rgeos", type="source")
q()
n
install.packages("rgeos")
install.packages("rgdal")
install.packages("rgdal", type="source")
q()
n
install.packages("rgdal")
install.packages("rgeos")
q()
n
library("rgeos")
install.packages("rgeos")
y
y
install.packages("rgdal")
install.packages("sp")
install.packages("rgdal")
library(sp)
install.packages("rgdal")
q()
nn
install.packages("rgdal")
y
q()
n
install.packages("rgdal")
install.packages("raster")
install.packages("tidyr")
install.packages("ggplot2")
install.packages("RcppArmadillo")
?mutate_at
head(init_area_mat)
dim(init_area_mat)
dim(init_area_mat)
head(init_area_mat)
head(init_area_mat)
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
colnames(init_area_mat)
colSums(init_area_mat)
sort(colSums(init_area_mat))
source("code/allocate.R")
1 / 0.0027777777777777777777777
4320 * 360
360 * 360
0.6 / 0.0027777777777777777777777
0.7 / 0.0027777777777777777777777
q()
n
source("code/allocate.R")
q()
n
source("code/allocate.R")
q()
n
source("code/allocate.R")
head(dmd)
colnames(dmd)[sort(dmd[1,])]
fcolnames(dmd)[order(dmd[1,])]
colnames(dmd)[order(dmd[1,])]
colnames(dmd)[order(dmd[1,], decreasing=TRUE)]
colSums(dmd)
colnames(dmd)[order(dmd[1,], decreasing=TRUE)]
source("code/allocate.R")
source("code/allocate.R")
dmd[2,6:7]
dmd[["trof"]][1:10]
dmd
which(colnames(dmd) %in% "trof")
dmd[,39]
plot(dmd[,39])
matplot(dmd)
names(trof_phys)
plot(trof_phys[["irri"]])
plot(trof_phys[["rain"]])
source("code/allocate.R")
dim(dmd)
length(alloc_order)
source("code/allocate.R")
source("code/allocate.R")
total_production_fun(temf_harv[["total"]], temf_yield[["total"]])
source("code/prepare_input_data.R")
install.packages("devtools")
source("code/prepare_input_data.R")
install.packages("lubridate")
install.packages("testthat")
source("code/prepare_input_data.R")
df = data.frame(x=1:10,y=1:10,z=1:10)
df
mutate_each(df, funs(.*1e6))
mutate_all(df, funs(.*1e6))
aa=yield_df
?vars
names(yield_df)
all.equal(yield_df, aa)
source("code/prepare_input_data.R")
total_production_fun(temf_harv[["total"]], temf_yield[["total"]])
which(colnames(dmd) %in% "temf")
dmd[,37]
7449478 - 9519967
total_production_fun(temf_harv[["total"]], temf_yield[["total"]])
which(colnames(dmd) %in% "maiz")
dmd[,13]
alloc_order
which(colnames(dmd) %in% "bean")
which(colnames(dmd) %in% "chic")
which(colnames(dmd) %in% "pige")
which(colnames(dmd) %in% "lent")
which(colnames(dmd) %in% "cowp")
which(colnames(dmd) %in% "opul")
dmd[,4]
dmd[,6]
dmd[,20]
dmd[,12]
dmd[,18]
dmd[,18]
all.equal(yield_df, aa)
plot(temf_suit$irri)
plot(temf_yield$irri)
plot(trof_suit$irri)
plot(whea_yield$irri)
colnames(init_yield_mat)
init_yield_mat[,37]
colnames(init_yield_mat)[37]
x = init_yield_mat[,37]
ix = which(x > 0)
length(ix)
y = init_suit_mat[,37][ix]
x = x[ix]
colnames(init_suit_mat)[37]
plot(x,y)
lm(x ~ y, data=data.frame(x=x,y=y))
mod = lm(x ~ y, data=data.frame(x=x,y=y))
predict(mod, newdata=data.frame(x=seq(0,1,by=0.01)))
predict(mod, newdata=data.frame(x=seq(0,1,by=0.01)))
predict(mod, newdata=data.frame(y=seq(0,1,by=0.01)))
plot(predict(mod, newdata=data.frame(y=seq(0,1,by=0.01))))
plot(y,x)
lines(predict(mod, newdata=data.frame(y=seq(0,1,by=0.01))))
lines(seq(0,1,by=0.01), predict(mod, newdata=data.frame(y=seq(0,1,by=0.01))))
plot(seq(0,1,by=0.01), predict(mod, newdata=data.frame(y=seq(0,1,by=0.01))))
points(y,x)
summary(mod)
plot(trof_yield$irri)
plot(trof_yield$rain)
all.equal(colnames(init_yield_mat), colnames(init_suit_mat))
dim(init_suit_mat)
dim(yield_df)
dim(suit_df)
names(suit_df)
suit_df[1:10,1:3]
input_levels
n_season
n_input_level
j
j=1
ix[1:10]
n_season
n_input
ix
?aggregate
df
cbind(df, a=0)
seq_len(n_season)
init_suit_mat$season[ix][1:10]
init_suit_mat$season[ix][1:100]
init_suit_mat$season[ix][1:10]
c(1:10)
aggregate(c(1:10)
)
aggregate(c(1:10), FUN=max)
i
i=1
class(yield)
?.colMeans
?.colMax
matrix(yield, ncol=3)
length(yield)
37026/3
n_season
n_input
yield
max(yield)
nms[i]
nms[1]
head(yield)
length(yield)
nms
i=41
input_levels
plot(suit, yield)
max(yield)
mean(yield)
length(which(yield > 0))
length(yield)
input_levels
plot(yield[yield > 0], suit[yield > 0])
suit
head(init_yield_mat)
head(init_suit_mat)
suit
yield
length(yield)
init_yield_mat[ix,i] %>% matrix(ncol=3)
n_season
yield
suit
plot(suit, yield)
i
j
i=1
i
j
yield
suit
ix
nms
i=41
yield
suit
length(row_ix)
j
input_levels
pred
length(pred)
class(pred)
length(which(suit > 0))
source("code/allocate.R")
warnings()
j
source("code/allocate.R")
length(row_ix)
length(yield0)
37026/3
rep(c(1:5), each=5)
n_season
rep(yield0, each=n_season)[1:10]
length(rep(yield0, each=n_season))
source("code/allocate.R")
source("code/allocate.R")
which(colnames(init_yield_df), "temf")
which(colnames(init_yield_mat), "temf")
which(colnames(init_yield_mat) %in% "temf")
mean(init_yield_mat[,37])
max(init_yield_mat[,37])
 mean(temf_yield[temf_yield > 0])
which(colnames(init_yield_mat) %in% "bana")
mean(init_suit_mat[,2])
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
summary(init_suit_mat[,37])
source("code/allocate.R")
source("code/allocate.R")
mean(bana_yield[bana_yield > 0])
summary(bana_yield[bana_yield > 0])
length(bana_yield[bana_yield > 0])
colnames(init_yield_mat)[37]
source("code/allocate.R")
which(colnames(init_yield_mat) %in% "trof")
source("code/allocate.R")
source("code/allocate.R")
source("code/allocate.R")
nms
i=39
j
j=1
yield
length(yield)
yield
any(yield > 0)
length(which(yield > 0))
suit
any(ix)
mod
plot(suit, yield)
lines(pred)
length(pred)
lines(seq(0,1,length.out=2336), pred)
lines(seq(0,1,by=0.01), predict(mod, newdata=data.frame(y=seq(0,1,by=0.01))))
any(ix)
length(which(ix))
plot(suit[ix], yield[ix])
lines(seq(0,1,by=0.01), predict(mod, newdata=data.frame(y=seq(0,1,by=0.01))))
source("code/allocate.R")
i
i=1
col_ix
j
j=1
length(yield)
yield
min(yield[yield > 0])
max(yield[yield > 0])
mean(yield[yield > 0])
length(row_ix)
length(rep(yield0, each=n_season))
col_ix
j
source("code/allocate.R")
source("code/allocate.R")
mean(c(0,0,0,0))
head(gcam_yield)
head(gcam_prod)
head(gcam_yield)
dim(gcam_yield)
head(gcam_yield)
dim(gcam_yield)
head(gcam_yield)
head(gcam_yield)
gcam_yield$Units
gcam_yield
head(gcam_yield)
head(gcam_prod)
head(gcam_yield)
head(gcam_yield)
head(gcam_yield)
head(gcam_yield)
unique(gcam_yield$sector)
head(gcam_yield)
max(init_yield_mat)
max(init_yield_mat, na.rm=TRUE)
which(colnames(init_yield_mat) %in% "sugc")
max(init_yield_mat[,33])
max(init_yield_mat[,1])
max(init_yield_mat[,1], na.rm=TRUE)
max(init_yield_mat[,2], na.rm=TRUE)
max(init_yield_mat[,3], na.rm=TRUE)
max(init_yield_mat[,4], na.rm=TRUE)
max(init_yield_mat[,5], na.rm=TRUE)
apply(init_yield_mat, 2, max, na.rm=TRUE)
q()
n
